multiline
<drac2>

def main(input_dict: dict) -> tuple(str, str):

    if (svar_dict := get_svar("DoWYW")):
        svar_dict = load_json(svar_dict)

    else:
        svar_dict = {}

    for deck_key, deck_value in input_dict.items():
        svar_dict[deck_key] = deck_value

    f = ["**Successfully imported:**"] + [input_dict.keys()]
    f = "\n".join(f)

    prefix = ctx.prefix

    embed_str = f"{prefix}embed -title 'Successful import' -f '{f}' -footer '!deckofcards import [JSON string] | 1/9/25 | ShadowsStride' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Deck-of-Whatever-You-Want/refs/heads/main/Data/images/main.png'"

    return embed_str, f"{prefix}svar DoWYW {dump_json(svar_dict)}"


input_list = &ARGS&

if len(input_list) < 1:
    embed_str, svar_str = f"{prefix}embed -title 'You Have Been Sneak Attacked by an Error' -f 'Expected a JSON string' -footer '!deckofcards import [JSON string] | 1/9/25 | ShadowsStride' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Deck-of-Whatever-You-Want/refs/heads/main/Data/images/error.png' -color '#CF142B'", ""

else:
    try:
        embed_str, svar_str = main(load_json(input_list[0]))

    except:
        embed_str, svar_str = f"{prefix}embed -title 'You Have Been Sneak Attacked by an Error' -f 'Error processing JSON string' -footer '!deckofcards import [JSON string] | 1/9/25 | ShadowsStride' -thumb 'https://raw.githubusercontent.com/Shadow-Draconic-Development/Avrae-Deck-of-Whatever-You-Want/refs/heads/main/Data/images/error.png' -color '#CF142B'", ""


</drac2>
{{embed_str}}
{{svar_str}}